<Window
    x:Class="RobotEditor.View.RobotValues"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:RobotEditor.ViewModel"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:RobotEditor.Model"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type=viewModel:ResultViewModel, IsDesignTimeCreatable=false}"
    Title="RobotValues"
    Height="300"
    Width="1100"
    MinWidth="300"
    MinHeight="200"
    WindowStartupLocation="CenterOwner">
    <Grid>
        <Grid.Resources>
            <ObjectDataProvider
                x:Key="JTypes"
                MethodName="GetValues"
                ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type
                        TypeName="local:JointTypes" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <Style
                TargetType="Button">
                <Setter
                    Property="Margin"
                    Value="5,0,5,5" />
                <Setter
                    Property="VerticalAlignment"
                    Value="Center" />
                <Setter
                    Property="Padding"
                    Value="3" />
            </Style>
            <Style
                TargetType="DataGrid">
                <Setter
                    Property="Margin"
                    Value="5,5,5,5" />
                <Setter
                    Property="Background"
                    Value="Transparent" />
            </Style>
            <Style
                TargetType="{x:Type DataGridCell}">
                <Style.Triggers>
                    <Trigger
                        Property="IsSelected"
                        Value="true">
                        <Setter
                            Property="Background"
                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        <Setter
                            Property="Foreground"
                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        <Setter
                            Property="BorderBrush"
                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    </Trigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition
                                Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}"
                                Value="True" />
                            <Condition
                                Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}"
                                Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter
                                Property="Background"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter
                                Property="BorderBrush"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition
                Width="*" />
            <ColumnDefinition
                Width="Auto" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition
                Height="*" />
            <RowDefinition
                Height="Auto" />
        </Grid.RowDefinitions>

        <DataGrid
            Grid.Column="0"
            Grid.Row="0"
            x:Name="DHParam_Grid"
            ItemsSource="{Binding Path=Joints}"
            AutoGenerateColumns="False"
            SelectedItem="{Binding Path=SelectedJoint}"
            SelectionMode="Single"
            CanUserAddRows="False"
            CanUserDeleteRows="False">
            <DataGrid.Columns>
                <DataGridTextColumn
                    Header="#"
                    Width="30"
                    Binding="{Binding Path=Nr, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                    IsReadOnly="true" />
                <DataGridTextColumn
                    Header="a [mm]"
                    Width="100"
                    Binding="{Binding Path=A, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                    CanUserSort="False" />
                <DataGridTextColumn
                    Header="Alpha [°]"
                    Width="100"
                    Binding="{Binding Path=Alpha, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                    CanUserSort="False" />
                <DataGridTextColumn
                    Header="d [mm]"
                    Width="100"
                    Binding="{Binding Path=D, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                    CanUserSort="False" />
                <DataGridTextColumn
                    Header="Theta [°]"
                    Width="100"
                    Binding="{Binding Path=Theta, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                    CanUserSort="False" />
                <DataGridTextColumn
                    Header="Max. Lim [° / mm]"
                    Width="100"
                    Binding="{Binding Path=MaxLim, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                    CanUserSort="False" />
                <DataGridTextColumn
                    Header="Min. Lim [° / mm]"
                    Width="100"
                    Binding="{Binding Path=MinLim, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                    CanUserSort="False" />
                <DataGridComboBoxColumn
                    Header="Joint Type"
                    Width="100"
                    ItemsSource="{Binding Source={StaticResource JTypes}}"
                    SelectedItemBinding="{Binding Path=JoinType, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                    CanUserSort="False" />
                <DataGridTextColumn
                    Header="Speed [mm/s]"
                    Width="100"
                    Binding="{Binding Path=Speed, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                    CanUserSort="False" />
                <DataGridTextColumn
                    Header="Accel. [mm/s²]"
                    Width="100"
                    Binding="{Binding Path=Acceleration, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                    CanUserSort="False" />
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel
            Grid.Column="1"
            Grid.Row="0"
            VerticalAlignment="Center"
            Orientation="Vertical">
            <Button
                x:Name="AddJoint_Button"
                Content="Add Joint"
                Width="100"
                Command="{Binding Path=AddJoint}" />
            <Button
                x:Name="DeletJoint_Button"
                Content="Delete Joint"
                Width="100"
                Command="{Binding Path=DeleteJoint}" />
        </StackPanel>

        <StackPanel
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Grid.Row="1"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <Button
                x:Name="OK_Button"
                Content="OK"
                Width="100"
                IsDefault="True"
                Click="OK_Button_Click" />
            <Button
                x:Name="Cancel_Button"
                Content="Cancel"
                Margin="100,0,5,5"
                Width="100"
                IsCancel="True" />
        </StackPanel>

    </Grid>
</Window>