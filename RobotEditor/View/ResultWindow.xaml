<Window
    x:Class="RobotEditor.View.ResultWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:h="http://helix-toolkit.org/wpf"
    xmlns:viewModel="clr-namespace:RobotEditor.ViewModel"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type=viewModel:ResultViewModel, IsDesignTimeCreatable=false}"
    Title="ResultWindow"
    Height="600"
    Width="800"
    MinHeight="300"
    MinWidth="400"
    WindowStartupLocation="CenterOwner"
    SizeChanged="ResultWindow_SizeChanged">
    <AdornerDecorator>
        <Grid
            Name="mainGrid">
            <Grid.Resources>
                <Style
                    TargetType="Button">
                    <Setter
                        Property="Margin"
                        Value="5,0,5,5" />
                    <Setter
                        Property="VerticalAlignment"
                        Value="Center" />
                    <Setter
                        Property="Padding"
                        Value="3" />
                </Style>
                <Style
                    TargetType="CheckBox">
                    <Setter
                        Property="Margin"
                        Value="5,0,5,5" />
                    <Setter
                        Property="VerticalAlignment"
                        Value="Center" />
                </Style>
                <Style
                    TargetType="ComboBox">
                    <Setter
                        Property="Margin"
                        Value="5,0,5,5" />
                    <Setter
                        Property="VerticalAlignment"
                        Value="Center" />
                </Style>
                <Style
                    TargetType="Slider">
                    <Setter
                        Property="Margin"
                        Value="5,5,0,5" />
                    <Setter
                        Property="VerticalAlignment"
                        Value="Center" />
                </Style>
                <Style
                    TargetType="TextBox">
                    <Setter
                        Property="Margin"
                        Value="5,5,5,5" />
                    <Setter
                        Property="VerticalAlignment"
                        Value="Center" />
                    <Setter
                        Property="VerticalContentAlignment"
                        Value="Center" />
                </Style>
                <Style
                    TargetType="DataGrid">
                    <Setter
                        Property="Margin"
                        Value="5,5,5,5" />
                    <Setter
                        Property="Background"
                        Value="Transparent" />
                </Style>
                <Style
                    TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger
                            Property="IsSelected"
                            Value="true">
                            <Setter
                                Property="Background"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter
                                Property="BorderBrush"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}"
                                    Value="True" />
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}"
                                    Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter
                                    Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                <Setter
                                    Property="BorderBrush"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
                <Style
                    TargetType="Border">
                    <Setter
                        Property="Margin"
                        Value="5,0,5,0" />
                </Style>
                <Style
                    TargetType="{x:Type h:HelixViewport3D}">
                    <Setter
                        Property="Margin"
                        Value="6,1,6,1" />
                </Style>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="Auto" />
                <ColumnDefinition
                    Width="Auto"
                    MinWidth="200" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="70*" />
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="30*" />
                <RowDefinition
                    Height="Auto" />
            </Grid.RowDefinitions>

            <Grid
                Grid.Column="0"
                Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition
                        Height="*" />
                    <RowDefinition
                        Height="Auto" />
                </Grid.RowDefinitions>

                <h:HelixViewport3D
                    Grid.Row="0"
                    x:Name="view_Result"
                    CameraRotationMode="Trackball"
                    ModelUpDirection="0,1,0"
                    ZoomExtentsWhenLoaded="True"
                    ItemsSource="{Binding Path=BoothModels}" />
                <Button
                    Grid.Row="1"
                    x:Name="button_FitToView"
                    Content="Fit to view"
                    Width="100"
                    Command="{Binding FitToView}" />
            </Grid>

            <GridSplitter
                Grid.Row="0"
                Grid.Column="1"
                ResizeDirection="Columns"
                ResizeBehavior="PreviousAndNext"
                VerticalAlignment="Stretch"
                Width="5" />

            <GroupBox
                Grid.Column="2"
                Grid.Row="0"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                Header="Settings">
                <StackPanel
                    Grid.IsSharedSizeScope="True"
                    HorizontalAlignment="Stretch"
                    Orientation="Vertical">
                
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="Auto"
                                SharedSizeGroup="Label" />
                            <ColumnDefinition
                                Width="*" />
                        </Grid.ColumnDefinitions>

                        <Label
                            Grid.Column="0"
                            x:Name="label_Method"
                            Content="Method:" />
                        <ComboBox
                            Grid.Column="1"
                            HorizontalAlignment="Stretch"
                            x:Name="comboBox_SearchMethod"
                            SelectedIndex="{Binding SelectedItemSearchMethod}">
                            <ListBoxItem
                                Content="Depth-First" />
                            <ListBoxItem
                                Content="Best-Voxel-First" />
                            <ListBoxItem
                                Content="Brute Force" />
                        </ComboBox>
                    </Grid>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="Auto"
                                SharedSizeGroup="Label" />
                            <ColumnDefinition
                                Width="*" />
                        </Grid.ColumnDefinitions>

                        <Label
                            Grid.Column="0"
                            x:Name="label_Shift"
                            Content="Shift Method:" />
                        <ComboBox
                            Grid.Column="1"
                            HorizontalAlignment="Stretch"
                            x:Name="comboBox_ShiftMethod"
                            SelectedIndex="{Binding SelectedItemShiftMethod}">
                            <ListBoxItem
                                Content="Corner Voxel" />
                            <ListBoxItem
                                Content="Center Voxel" />
                        </ComboBox>
                    </Grid>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="Auto"
                                SharedSizeGroup="Label" />
                            <ColumnDefinition
                                Width="*" />
                        </Grid.ColumnDefinitions>

                        <Label
                            Grid.Column="0"
                            x:Name="label_NoOfSearchCycles"
                            Content="Number of search cycles:" />
                        <TextBox
                            Grid.Column="1"
                            x:Name="textBox_NrOfSearchCycles"
                            Text="{Binding SearchCycles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="Auto"
                                SharedSizeGroup="Label" />
                            <ColumnDefinition
                                Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition
                                Height="Auto" />
                            <RowDefinition
                                Height="Auto" />
                        </Grid.RowDefinitions>

                        <Label
                            Grid.Column="0"
                            Grid.Row="0"
                            x:Name="label_NoOfRobots"
                            Content="Number of robots:" />
                        <TextBox
                            Grid.Column="1"
                            Grid.Row="0"
                            x:Name="textBox_NrOfRobots"
                            Text="{Binding Value, ElementName=slider_NoOfRobots, UpdateSourceTrigger=PropertyChanged}" />
                        <Slider
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Grid.Row="1"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            x:Name="slider_NoOfRobots"
                            Maximum="8"
                            IsSnapToTickEnabled="True"
                            TickPlacement="BottomRight"
                            Minimum="1"
                            Value="{Binding NoOfRobots}"
                            SmallChange="1"
                            TickFrequency="1"
                            LargeChange="1" />

                    </Grid>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="Auto"
                                SharedSizeGroup="Label" />
                            <ColumnDefinition
                                Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition
                                Height="Auto" />
                            <RowDefinition
                                Height="Auto" />
                        </Grid.RowDefinitions>

                        <Label
                            Grid.Column="0"
                            Grid.Row="0"
                            x:Name="label_initialLowerBound"
                            Content="Initial Lower Bound:" />

                        <CheckBox
                            Grid.Column="1"
                            Grid.Row="0"
                            x:Name="checkBox_MaxVoxel"
                            Content="Max. Voxel"
                            Command="{Binding MaxVoxel}"
                            IsChecked="{Binding IsCheckedMaxVoxel}" />

                        <CheckBox
                            Grid.Column="1"
                            Grid.Row="1"
                            x:Name="checkBox_Leaf"
                            Content="Max. Leaf"
                            Command="{Binding MaxLeaf}"
                            IsChecked="{Binding IsCheckedMaxLeaf}" />
                    </Grid>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="Auto"
                                SharedSizeGroup="Label" />
                            <ColumnDefinition
                                Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition
                                Height="Auto" />
                            <RowDefinition
                                Height="Auto" />
                            <RowDefinition
                                Height="Auto" />
                        </Grid.RowDefinitions>

                        <Label
                            Grid.Column="0"
                            Grid.Row="0"
                            x:Name="label_lowerBound"
                            Content="Lower bound check:" />

                        <CheckBox
                            Grid.Column="1"
                            Grid.Row="0"
                            x:Name="checkBox_MaxValue"
                            Content="Max. Value"
                            Command="{Binding MaxValue}"
                            IsChecked="{Binding IsCheckedMaxValue}" />

                        <CheckBox
                            Grid.Column="1"
                            Grid.Row="1"
                            x:Name="checkBox_MaxLeaf"
                            Content="Max. Leafs"
                            Command="{Binding MaxLeafs}"
                            IsChecked="{Binding IsCheckedMaxLeafs}" />

                        <CheckBox
                            Grid.Column="1"
                            Grid.Row="2"
                            x:Name="checkBox_MaxMax"
                            Content="Max. Max."
                            Command="{Binding MaxMax}"
                            IsChecked="{Binding IsCheckedMaxMax}" />
                    </Grid>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="Auto"
                                SharedSizeGroup="Label" />
                            <ColumnDefinition
                                Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition
                                Height="Auto" />
                            <RowDefinition
                                Height="Auto" />
                            <RowDefinition
                                Height="Auto" />
                        </Grid.RowDefinitions>

                        <Label
                            Grid.Column="0"
                            Grid.Row="0"
                            x:Name="label_layoutOptions"
                            Content="Layout Options:" />

                        <CheckBox
                            Grid.Column="1"
                            Grid.Row="0"
                            x:Name="checkBox_Rotation"
                            Content="Rotate robot"
                            Command="{Binding Rotation}"
                            IsChecked="{Binding IsCheckedRotation}" />

                        <CheckBox
                            Grid.Column="1"
                            Grid.Row="1"
                            x:Name="checkBox_NoGo"
                            Content="Exclude NoGo-Zones"
                            Command="{Binding NoGo}"
                            IsChecked="{Binding IsCheckedNoGo}" />

                        <CheckBox
                            Grid.Column="1"
                            Grid.Row="2"
                            x:Name="checkBox_Symmetry"
                            Content="Symmetric layout"
                            Command="{Binding Symmetry}"
                            IsChecked="{Binding IsCheckedSymmetry}" />
                    </Grid>

                    <Button
                        x:Name="button_Start"
                        Content="Start comparison"
                        IsDefault="True"
                        Width="140"
                        Command="{Binding Start}" />
                </StackPanel>
            </GroupBox>

            <GridSplitter
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                ResizeDirection="Rows"
                HorizontalAlignment="Stretch"
                Height="5" />

            <DataGrid
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Grid.Row="2"
                x:Name="Robots_Grid"
                ItemsSource="{Binding Booths}"
                AutoGenerateColumns="False"
                SelectedItem="{Binding SelectedBooth}"
                SelectionMode="Single"
                CanUserAddRows="False"
                CanUserDeleteRows="False">
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Header="Robot"
                        Binding="{Binding Path=RobotName, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        IsReadOnly="true" />
                    <DataGridTextColumn
                        Binding="{Binding Path=BestMatch, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        IsReadOnly="true"
                        ClipboardContentBinding="{x:Null}"
                        Header="Total Match" />
                    <DataGridTextColumn
                        Binding="{Binding Path=LowerBound, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        IsReadOnly="true"
                        ClipboardContentBinding="{x:Null}"
                        Header="Init. Lower Bound" />
                    <DataGridTextColumn
                        Binding="{Binding Path=ComputationTime, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        IsReadOnly="true"
                        ClipboardContentBinding="{x:Null}"
                        Header="Computation time" />
                    <DataGridTextColumn
                        Binding="{Binding Path=Cycles, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        IsReadOnly="true"
                        ClipboardContentBinding="{x:Null}"
                        Header="Branches" />
                    <DataGridTextColumn
                        Binding="{Binding Path=XPos, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        IsReadOnly="true"
                        ClipboardContentBinding="{x:Null}"
                        Header="X-Pos" />
                    <DataGridTextColumn
                        Binding="{Binding Path=YPos, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        IsReadOnly="true"
                        ClipboardContentBinding="{x:Null}"
                        Header="Y-Pos" />
                    <DataGridTextColumn
                        Binding="{Binding Path=ZPos, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        IsReadOnly="true"
                        ClipboardContentBinding="{x:Null}"
                        Header="Z-Pos" />
                </DataGrid.Columns>
            </DataGrid>

            <Grid
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Grid.Row="3">
                <Button
                    x:Name="button_OK"
                    Content="OK"
                    Width="100"
                    IsCancel="True" />
            </Grid>
        </Grid>
    </AdornerDecorator>
</Window>